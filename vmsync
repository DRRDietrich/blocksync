#!/bin/bash

usage() { echo "Usage: $0 -f LOCAL_FILE [-r REMOTE_FILE] [-n NVRAM_FILE] [-t TPM_FILE] [-l LOCALHOST] -s SERVER" 1>&2; exit 0; }

while getopts ":f:l:n:r:s:t:" o; do
	case "${o}" in
		f)
			file_local=${OPTARG};
			;;
		l)
			localhost=${OPTARG};
			;;
		n)
			nvram=${OPTARG};
			;;
		r)
			file_remote=${OPTARG};
			;;
		s)
			server=${OPTARG};
			;;
		t)
			tpm=${OPTARG};
			;;
		\? )
			usage;
			;;
		: )
			echo "Invalid option: $OPTARG requires an argument" 1>&2
			;;
	esac
done
shift $((OPTIND-1))

if [ -z "${file_local}" ] || [ -z "${server}" ]; then
	usage
fi

if [ -z "${localhost}" ]; then
	localhost="$(hostname)";
fi

if [ -z "${file_remote}" ]; then
	file_remote="${file_local}";
fi;

# compare timestamps of files
t_local=$(stat -c "%Y" "${file_local}");
t_remote=$(ssh "${server}" stat -c "%Y" "${file_remote}");

if [ -s ${file_local}.vmsync ]; then
	t_sync=$(cat ${file_local}.vmsync);
	if [ ${t_local} != ${t_sync} ] && [ ${t_sync} != ${t_remote} ]; then
		echo "Conflict! Both the local file and the remote file have changed since the last synchronization. Please make a choice.";
		exit 0;
	fi;
	else
		echo "First synchronization!";
		echo ${t_local} > ${file_local}.vmsync;
		ssh "${server}" "echo ${t_remote} > ${file_remote}.vmsync";
fi;
if [ ${t_local} -lt ${t_remote} ]; then
	echo "File on ${server} is newer. Try to start vmsync from ${server}.";
	echo "vmsync ${file_remote} ${localhost} ${file_local}";
	ssh ${server};
	exit 0;
fi;
if [ ${t_local} -eq ${t_remote} ]; then
	echo "Files have identical timestamps";
	exit 0;
fi;
if [ ${t_local} -gt ${t_remote} ]; then
	# sparsify VM image to save space and time
	virt-sparsify --in-place "${file_local}";
	# reset timestamp
	touch -d @"${t_local}" "${file_local}"
	# blocksync file utill success
	until $HOME/blocksync.py -b 16777216 -c aes128-gcm@openssh.com -w 8 -T "${file_local}" "${server}" "${file_remote}"; do
		echo "Fail! Start the next attempt.";
	done;
	echo ${t_local} > ${file_local}.vmsync;
	# sync nvram
	rsync "${nvram}" "${server}":"${nvram}";
	# sync tpm, if exists
	if [ -e /var/lib/libvirt/swtpm/ ];
		then rsync -r "${tpm} "${server}":$(dirname ${tpm});
        	else "No swtpm found!";
	fi;
	# correcting timestamp
	ssh "${server}" touch -d @"${t_local}" "${file_remote}"
	ssh "${server}" "echo ${t_local} > ${file_remote}.vmsync";
	exit 0;
fi;